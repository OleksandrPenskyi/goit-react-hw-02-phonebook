{"version":3,"sources":["components/Filter/Filter.module.css","components/ContactForm/ContactForm.module.css","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactListItem/ContactListItem.js","components/ContactList/ContactList.js","App.js","index.js","components/ContactList/ContactListItem/ContactListItem.module.css"],"names":["module","exports","INITIAL_STATE","name","number","ContactForm","state","onInputChange","event","currentTarget","value","setState","onSubmitAddContact","preventDefault","props","addNewContact","clearForm","randomIdForName","uuidv4","randomIdForNumber","this","onSubmit","className","styles","Form","Label","htmlFor","onChange","type","pattern","title","required","Input","id","Btn","Component","Filter","onChangeFilter","filter","randomIdForFilter","ContactListItem","contact","deleteContact","Contact","Info","onClick","ContactList","filteredContacts","map","App","contacts","prevState","changeFilter","isRepeatedName","toLowerCase","includes","alert","newContact","filterContacts","normalizedFilter","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2c66ad7c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Filter_Input__3nBUY\",\"Label\":\"Filter_Label__3eEsE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Form\":\"ContactForm_Form__uTkjc\",\"Label\":\"ContactForm_Label__26WPR\",\"Input\":\"ContactForm_Input__WPp9V\",\"Btn\":\"ContactForm_Btn__3Mroj\"};","import React, { Component } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport styles from './ContactForm.module.css';\r\n\r\nconst INITIAL_STATE = {\r\n  name: '',\r\n  number: '',\r\n};\r\n\r\nclass ContactForm extends Component {\r\n  state = { ...INITIAL_STATE };\r\n\r\n  onInputChange = event => {\r\n    const { name, value } = event.currentTarget;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  onSubmitAddContact = event => {\r\n    event.preventDefault();\r\n\r\n    this.props.addNewContact(this.state);\r\n    this.clearForm();\r\n  };\r\n\r\n  clearForm = () => {\r\n    this.setState({ ...INITIAL_STATE });\r\n  };\r\n\r\n  render() {\r\n    const randomIdForName = uuidv4();\r\n    const randomIdForNumber = uuidv4();\r\n\r\n    const { name, number } = this.state;\r\n\r\n    return (\r\n      <form onSubmit={this.onSubmitAddContact} className={styles.Form}>\r\n        <label className={styles.Label} htmlFor={randomIdForName}>\r\n          Name\r\n        </label>\r\n        <input\r\n          onChange={this.onInputChange}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={name}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          className={styles.Input}\r\n          id={randomIdForName}\r\n        />\r\n\r\n        <label className={styles.Label} htmlFor={randomIdForNumber}>\r\n          Number\r\n        </label>\r\n        <input\r\n          onChange={this.onInputChange}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          value={number}\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n          className={styles.Input}\r\n          id={randomIdForNumber}\r\n        />\r\n\r\n        <button type=\"submit\" className={styles.Btn}>\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactForm;\r\n","import React from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport styles from './Filter.module.css';\r\n\r\nconst Filter = ({ onChangeFilter, filter }) => {\r\n  const randomIdForFilter = uuidv4();\r\n\r\n  return (\r\n    <>\r\n      <label htmlFor={randomIdForFilter} className={styles.Label}>\r\n        Find contacts by name\r\n      </label>\r\n      <input\r\n        onChange={onChangeFilter}\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        value={filter}\r\n        id={randomIdForFilter}\r\n        className={styles.Input}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n\r\nFilter.propTypes = {\r\n  onChangeFilter: PropTypes.func,\r\n  filter: PropTypes.string,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport styles from './ContactListItem.module.css';\r\n\r\nconst ContactListItem = ({ contact, deleteContact }) => {\r\n  const { name, number, id } = contact;\r\n\r\n  return (\r\n    <li className={styles.Contact}>\r\n      <span className={styles.Info}>\r\n        {name}: {number}\r\n      </span>\r\n      <button\r\n        className={styles.Btn}\r\n        onClick={() => deleteContact(id)}\r\n        type=\"button\"\r\n      >\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default ContactListItem;\r\n\r\nContactListItem.propTypes = {\r\n  contact: PropTypes.object.isRequired,\r\n  deleteContact: PropTypes.func.isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport ContactListItem from './ContactListItem';\r\n\r\nconst ContactList = ({ filteredContacts, deleteContact }) => (\r\n  <ul>\r\n    {filteredContacts.map(contact => (\r\n      <ContactListItem\r\n        contact={contact}\r\n        key={contact.id}\r\n        deleteContact={deleteContact}\r\n      />\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nexport default ContactList;\r\n\r\nContactList.propTypes = {\r\n  filteredContacts: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  deleteContact: PropTypes.func,\r\n};\r\n","import React, { Component } from 'react';\nimport ContactForm from './components/ContactForm';\nimport Filter from './components/Filter';\nimport ContactList from './components/ContactList';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport './styles.css';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  deleteContact = id => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== id),\n    }));\n  };\n\n  changeFilter = event => {\n    const { value } = event.currentTarget;\n    this.setState({ filter: value });\n  };\n\n  isRepeatedName = name => {\n    const repeatedName = this.state.contacts\n      .map(contact => contact.name.toLowerCase())\n      .includes(name.toLowerCase());\n\n    return repeatedName;\n  };\n\n  addNewContact = ({ name, number }) => {\n    if (this.isRepeatedName(name)) {\n      alert(`${name} is already in contacts.`);\n    } else {\n      const newContact = {\n        name: name,\n        number: number,\n        id: uuidv4(),\n      };\n\n      this.setState(prevState => ({\n        contacts: [...prevState.contacts, newContact],\n      }));\n    }\n  };\n\n  filterContacts = () => {\n    const { contacts, filter } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  render() {\n    const { filter } = this.state;\n    const filteredContacts = this.filterContacts();\n\n    return (\n      <div className=\"Wrapper\">\n        <h1>Phonebook</h1>\n        <ContactForm addNewContact={this.addNewContact} />\n\n        <h2>Contacts</h2>\n        <Filter onChangeFilter={this.changeFilter} filter={filter} />\n        <ContactList\n          filteredContacts={filteredContacts}\n          deleteContact={this.deleteContact}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Contact\":\"ContactListItem_Contact__dDtzy\",\"Info\":\"ContactListItem_Info__3awuj\",\"Btn\":\"ContactListItem_Btn__2Ugef\"};"],"sourceRoot":""}