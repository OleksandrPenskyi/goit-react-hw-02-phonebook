{"version":3,"sources":["App.module.css","components/ContactForm/ContactForm.module.css","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactListItem/ContactListItem.js","components/ContactList/ContactList.js","App.js","index.js","components/ContactList/ContactListItem/ContactListItem.module.css","components/Filter/Filter.module.css"],"names":["module","exports","ContactForm","state","name","number","onInputChange","event","currentTarget","value","setState","onSubmitAddContact","preventDefault","props","addNewContact","idForNameLabel","uuidv4","idForNumber","this","onSubmit","className","styles","Form","Label","htmlFor","onChange","type","pattern","title","required","Input","id","Btn","Component","Filter","onChangeFilter","filter","idForFilterLabel","ContactListItem","contact","deleteContact","Contact","Info","onClick","ContactList","filteredContacts","map","App","contacts","prevState","changeFilter","isRepeatedName","toLowerCase","includes","alert","newContact","filterContacts","normalizedFilter","Wrapper","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8f898a23.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"App_Wrapper__294o6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Form\":\"ContactForm_Form__uTkjc\",\"Label\":\"ContactForm_Label__26WPR\",\"Input\":\"ContactForm_Input__WPp9V\",\"Btn\":\"ContactForm_Btn__3Mroj\"};","import React, { Component } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport styles from './ContactForm.module.css';\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  onInputChange = event => {\r\n    const { name, value } = event.currentTarget;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  onSubmitAddContact = event => {\r\n    event.preventDefault();\r\n\r\n    this.props.addNewContact(this.state);\r\n  };\r\n\r\n  render() {\r\n    const idForNameLabel = uuidv4();\r\n    const idForNumber = uuidv4();\r\n\r\n    const { name, number } = this.state;\r\n\r\n    return (\r\n      <form onSubmit={this.onSubmitAddContact} className={styles.Form}>\r\n        <label className={styles.Label} htmlFor={idForNameLabel}>\r\n          Name\r\n        </label>\r\n        <input\r\n          onChange={this.onInputChange}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={name}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          className={styles.Input}\r\n          id={idForNameLabel}\r\n        />\r\n\r\n        <label className={styles.Label} htmlFor={idForNumber}>\r\n          Number\r\n        </label>\r\n        <input\r\n          onChange={this.onInputChange}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          value={number}\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n          className={styles.Input}\r\n          id={idForNumber}\r\n        />\r\n\r\n        <button type=\"submit\" className={styles.Btn}>\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactForm;\r\n","import React from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport styles from './Filter.module.css';\r\n\r\nconst Filter = ({ onChangeFilter, filter }) => {\r\n  const idForFilterLabel = uuidv4();\r\n\r\n  return (\r\n    <>\r\n      <label htmlFor={idForFilterLabel} className={styles.Label}>\r\n        Find contacts by name\r\n      </label>\r\n      <input\r\n        onChange={onChangeFilter}\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        value={filter}\r\n        id={idForFilterLabel}\r\n        className={styles.Input}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import React from 'react';\r\nimport styles from './ContactListItem.module.css';\r\n\r\nconst ContactListItem = ({ contact, deleteContact }) => {\r\n  const { name, number, id } = contact;\r\n\r\n  return (\r\n    <li className={styles.Contact}>\r\n      <span className={styles.Info}>\r\n        {name}: {number}\r\n      </span>\r\n      <button\r\n        className={styles.Btn}\r\n        onClick={() => deleteContact(id)}\r\n        type=\"button\"\r\n      >\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default ContactListItem;\r\n","import React from 'react';\r\nimport ContactListItem from './ContactListItem';\r\n\r\nconst ContactList = ({ filteredContacts, deleteContact }) => (\r\n  <ul>\r\n    {filteredContacts.map(contact => (\r\n      <ContactListItem\r\n        contact={contact}\r\n        key={contact.id}\r\n        deleteContact={deleteContact}\r\n      />\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nexport default ContactList;\r\n\r\n// const ContactList = ({ filteredContacts, deleteContact }) => (\r\n//   <ul>\r\n//     {filteredContacts.map(({ name, number, id }) => (\r\n//       <li key={id}>\r\n//         <p>\r\n//           {name}: {number}\r\n//         </p>\r\n//         <button onClick={() => deleteContact(id)} type=\"button\">\r\n//           Delete\r\n//         </button>\r\n//       </li>\r\n//     ))}\r\n//   </ul>\r\n// );\r\n","import React, { Component } from 'react';\nimport ContactForm from './components/ContactForm';\nimport Filter from './components/Filter';\nimport ContactList from './components/ContactList';\n\nimport { v4 as uuidv4 } from 'uuid';\n\nimport styles from './App.module.css';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  deleteContact = id => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== id),\n    }));\n  };\n\n  changeFilter = event => {\n    const { value } = event.currentTarget;\n    this.setState({ filter: value });\n  };\n\n  isRepeatedName = name => {\n    const repeatedName = this.state.contacts\n      .map(contact => contact.name.toLowerCase())\n      .includes(name.toLowerCase());\n\n    return repeatedName;\n  };\n\n  addNewContact = ({ name, number }) => {\n    if (this.isRepeatedName(name)) {\n      alert(`${name} is already in contacts.`);\n    } else {\n      const newContact = {\n        name: name,\n        number: number,\n        id: uuidv4(),\n      };\n\n      this.setState(prevState => ({\n        contacts: [...prevState.contacts, newContact],\n      }));\n    }\n  };\n\n  filterContacts = () => {\n    const { contacts, filter } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  render() {\n    const { filter } = this.state;\n    const filteredContacts = this.filterContacts();\n\n    return (\n      <div className={styles.Wrapper}>\n        <h1>Phonebook</h1>\n        <ContactForm addNewContact={this.addNewContact} />\n\n        <h2>Contacts</h2>\n        <Filter onChangeFilter={this.changeFilter} filter={filter} />\n        <ContactList\n          filteredContacts={filteredContacts}\n          deleteContact={this.deleteContact}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Contact\":\"ContactListItem_Contact__dDtzy\",\"Info\":\"ContactListItem_Info__3awuj\",\"Btn\":\"ContactListItem_Btn__2Ugef\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Filter_Input__3nBUY\",\"Label\":\"Filter_Label__3eEsE\"};"],"sourceRoot":""}